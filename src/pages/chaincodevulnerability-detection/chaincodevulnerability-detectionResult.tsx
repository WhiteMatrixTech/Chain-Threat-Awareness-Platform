/* eslint-disable @typescript-eslint/no-unsafe-argument */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/*
 * @Description:
 * @Author: didadida262
 * @Date: 2024-08-29 10:18:39
 * @LastEditors: didadida262
 * @LastEditTime: 2024-09-12 14:13:22
 */
/* eslint-disable @typescript-eslint/restrict-template-expressions */
/* eslint-disable prettier/prettier */

import { message, notification } from "antd";
import cn from "classnames";
import { useEffect, useState } from "react";
import { AiOutlineLoading3Quarters } from "react-icons/ai";
import { useParams } from "react-router-dom";

import IdentityInferenceDialogTitle from "@/assets/IdentityInferenceDialogTitle.png";
import { ButtonCommonV2, EButtonType } from "@/components/ButtonCommonV2";
import { InputCommonV4 } from "@/components/InputCommonV4";
import { ResultComponent } from "@/components/ResultComponent";
import { ResultComponentV2 } from "@/components/ResultComponentV2";
import { TableCommonV4 } from "@/components/TableCommonV4";
import { columnsChainCode } from "@/services/columns";
import {
  detectActionLogRequestType,
  detectActionLogService,
  detectChainCodeRequestType,
  detectChainCodeService
} from "@/services/detection";
import pattern from "@/styles/pattern";

export function ChaincodevulnerabilityDetectionResult() {
  const { name } = useParams();
  const inputVal = localStorage.getItem("chaincodeInfo");

  const [loading, setloading] = useState(true);
  const [result, setResult] = useState({
    time: "",
    content: ""
  });

  const [dataList, setDateList] = useState<any>([]);
  const start = async () => {
    if (!inputVal) {
      notification.warning({ message: `无输入值!!!` });
      return;
    }
    setloading(true);
    try {
      const params: detectChainCodeRequestType = {
        code: JSON.parse(inputVal),
        chain: "eth"
      };
      const respose = await detectChainCodeService(params);
      console.log("respose>>>", respose);
      setResult({
        ...result,
        content: respose.leakReason.join("\n"),
        time: (respose.cost / 1000).toFixed(1) + "s"
      });
      const paramsLog: detectActionLogRequestType = {
        action: "chaincode",
        count: 10
      };
      const resposeLog = await detectActionLogService(paramsLog);
      console.log("resposeLog>>>", resposeLog);
      const resultLog: any[] = resposeLog.data.map(
        (item: any, index: number) => {
          return {
            file: item.input,
            time: item.createAt,
            num: JSON.parse(item.output).leakCount,
            type: JSON.parse(item.output).leakType[index],
            reason: JSON.parse(item.output).leakReason[index]
          };
        }
      );
      setDateList(resultLog);
      setloading(false);
    } catch (error) {
      setloading(false);
    }
  };
  useEffect(() => {
    // 请求
    void start();
  }, []);

  return loading
    ? <div
        className={cn(
          "w-full h-full absolute top-0 left-0",
          `${pattern.flexCenter}`
        )}
      >
        <AiOutlineLoading3Quarters
          className="ml-2 animate-spin"
          style={{ color: "white", fontSize: "24px" }}
        />
      </div>
    : <div
        className={cn(" w-full h-full pt-[0px] fadeIn", `${pattern.flexbet}`)}
      >
        <div className={cn(`w-full h-full flex flex-col `)}>
          <div className="w-full h-[calc(100%_-_280px)]  flex justify-between">
            <div className="left w-[calc(40%_-_10px)] h-full flex flex-col justify-between ">
              <ResultComponentV2 title="输入信息" className="w-full h-[50px]" />
              <div
                className={cn(
                  `w-full h-[calc(100%_-_60px)]  px-4 py-4 overflow-scroll`,
                  `border-[2px] border-solid border-[#0D53B7]`,
                  `bg-[#0095FF66]`
                )}
              >
                <span className="text-[14px] text-[#ffffff]">
                  {inputVal && JSON.parse(inputVal)}
                </span>
              </div>
            </div>
            <div className="right w-[calc(60%_-_10px)] h-full  flex flex-col justify-between">
              <ResultComponent
                title="检测时间"
                content={result.time}
                className="w-full h-[50px]"
              />
              <div
                className={cn(
                  "w-full h-[50px] flex items-center justify-start "
                )}
              >
                <ResultComponentV2 title="检测报告" className="w-full h-full" />
              </div>
              <div
                className={cn(
                  `w-full h-[calc(100%_-_120px)] px-4 py-4 overflow-scroll`,
                  `border-[2px] border-solid border-[#0D53B7]`,
                  `bg-[#0095FF66]`
                )}
              >
                <span className="text-[16px] text-[#ffffff]">
                  {result.content}
                </span>
              </div>
            </div>
          </div>

          <div className={cn(` w-full h-[272px] mt-4`)}>
            <TableCommonV4
              className="w-full h-full"
              data={dataList}
              columns={columnsChainCode}
            />
          </div>
        </div>
      </div>;
}
